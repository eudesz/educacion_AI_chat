# Generated by Django 4.2.7 on 2025-07-02 02:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('documents', '0002_alter_document_options_document_analysis_metadata_and_more'),
    ]

    operations = [
        # Agregar nuevos campos a SemanticChunk
        migrations.AddField(
            model_name='semanticchunk',
            name='structure_element',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='documents.documentstructure'),
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='element_type',
            field=models.CharField(default='content', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='title',
            field=models.CharField(default='', max_length=500),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='page_start',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='page_end',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='metadata',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='vector_embeddings',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='semanticchunk',
            name='indexed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        
        # Remover campos antiguos de SemanticChunk
        migrations.RemoveField(
            model_name='semanticchunk',
            name='chunk_type',
        ),
        migrations.RemoveField(
            model_name='semanticchunk',
            name='page_number',
        ),
        migrations.RemoveField(
            model_name='semanticchunk',
            name='chunk_order',
        ),
        migrations.RemoveField(
            model_name='semanticchunk',
            name='embedding',
        ),
        migrations.RemoveField(
            model_name='semanticchunk',
            name='keywords',
        ),
        
        # Actualizar ordering de SemanticChunk
        migrations.AlterModelOptions(
            name='semanticchunk',
            options={'ordering': ['page_start']},
        ),
        
        # Crear el modelo ContextSession
        migrations.CreateModel(
            name='ContextSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('context_text', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        
        # Agregar relaci√≥n many-to-many entre ContextSession y SemanticChunk
        migrations.AddField(
            model_name='semanticchunk',
            name='parent_chunks',
            field=models.ManyToManyField(blank=True, related_name='child_chunks_rel', to='documents.semanticchunk'),
        ),
        migrations.AddField(
            model_name='contextsession',
            name='context_chunks',
            field=models.ManyToManyField(blank=True, related_name='context_sessions', to='documents.semanticchunk'),
        ),
    ]
